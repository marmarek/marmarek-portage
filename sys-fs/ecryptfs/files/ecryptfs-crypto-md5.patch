*** ecryptfs-kernel/2.6.18-rc6-mm1/crypto.c	2007-04-10 21:46:09.000000000 +0200
--- ecryptfs-kernel/2.6.18-rc6-mm1/crypto.c.new	2007-04-10 21:48:46.000000000 +0200
***************
*** 94,118 ****
  				  struct ecryptfs_crypt_stat *crypt_stat,
  				  char *src, int len)
  {
- 	int rc = 0;
  	struct scatterlist sg;
  
! 	mutex_lock(&crypt_stat->cs_md5_tfm_mutex);
  	sg_init_one(&sg, (u8 *)src, len);
! 	if (!crypt_stat->md5_tfm) {
! 		crypt_stat->md5_tfm =
! 			crypto_alloc_tfm("md5", CRYPTO_TFM_REQ_MAY_SLEEP);
! 		if (!crypt_stat->md5_tfm) {
! 			rc = -ENOMEM;
  			ecryptfs_printk(KERN_ERR, "Error attempting to "
! 					"allocate crypto context\n");
  			goto out;
  		}
  	}
! 	crypto_digest_init(crypt_stat->md5_tfm);
! 	crypto_digest_update(crypt_stat->md5_tfm, &sg, 1);
! 	crypto_digest_final(crypt_stat->md5_tfm, dst);
! 	mutex_unlock(&crypt_stat->cs_md5_tfm_mutex);
  out:
  	return rc;
  }
--- 94,124 ----
  				  struct ecryptfs_crypt_stat *crypt_stat,
  				  char *src, int len)
  {
  	struct scatterlist sg;
+ 	struct hash_desc desc = {
+ 		.tfm = crypt_stat->md5_tfm,
+ 		.flags = CRYPTO_TFM_REQ_MAY_SLEEP
+ 	};
+ 	int rc = 0;
  
! 	mutex_lock(&crypt_stat->cs_md5_tfm_mutex);
  	sg_init_one(&sg, (u8 *)src, len);
! 	if (!desc.tfm) {
! 		desc.tfm = crypto_alloc_hash("md5", 0,
! 					     CRYPTO_ALG_ASYNC);
! 		if (IS_ERR(desc.tfm)) {
! 			rc = PTR_ERR(desc.tfm);
  			ecryptfs_printk(KERN_ERR, "Error attempting to "
! 					"allocate crypto context; rc = [%d]\n",
! 					rc);
  			goto out;
  		}
+ 		crypt_stat->md5_tfm = desc.tfm;
  	}
! 	crypto_hash_init(&desc);
! 	crypto_hash_update(&desc, &sg, len);
! 	crypto_hash_final(&desc, dst);
! 	mutex_unlock(&crypt_stat->cs_md5_tfm_mutex);
  out:
  	return rc;
  }
