*** utils/gssd/context_heimdal.c.org	Fri Jun 22 16:40:13 2007
--- utils/gssd/context_heimdal.c	Fri Jun 22 16:40:48 2007
***************
*** 46,51 ****
--- 46,52 ----
  #include "err_util.h"
  #include "gss_oids.h"
  #include "write_bytes.h"
+ #include "context.h"
  
  int write_heimdal_keyblock(char **p, char *end, krb5_keyblock *key)
  {
***************
*** 214,220 ****
  
  
  	/* initiate:  1 => initiating 0 => accepting */
! 	if (ctx->more_flags & LOCAL) {
  		if (WRITE_BYTES(&p, end, constant_one)) goto out_err;
  	}
  	else {
--- 215,221 ----
  
  
  	/* initiate:  1 => initiating 0 => accepting */
! 	if (ctx->more_flags & GSS_C_AF_LOCAL) {
  		if (WRITE_BYTES(&p, end, constant_one)) goto out_err;
  	}
  	else {
*** ./utils/gssd/context_lucid.c.org	Sun Jun 24 01:03:41 2007
--- ./utils/gssd/context_lucid.c	Sun Jun 24 01:08:25 2007
***************
*** 171,180 ****
  	int retcode = 0;
  
  	printerr(2, "DEBUG: serialize_krb5_ctx: lucid version!\n");
! 	maj_stat = gss_export_lucid_sec_context(&min_stat, &ctx,
  						1, &return_ctx);
  	if (maj_stat != GSS_S_COMPLETE) {
! 		pgsserr("gss_export_lucid_sec_context",
  			maj_stat, min_stat, &krb5oid);
  		goto out_err;
  	}
--- 171,180 ----
  	int retcode = 0;
  
  	printerr(2, "DEBUG: serialize_krb5_ctx: lucid version!\n");
! 	maj_stat = gss_krb5_export_lucid_sec_context(&min_stat, &ctx,
  						1, &return_ctx);
  	if (maj_stat != GSS_S_COMPLETE) {
! 		pgsserr("gss_krb5_export_lucid_sec_context",
  			maj_stat, min_stat, &krb5oid);
  		goto out_err;
  	}
***************
*** 198,206 ****
  	else
  		retcode = prepare_krb5_rfc_cfx_buffer(lctx, buf);
  
! 	maj_stat = gss_free_lucid_sec_context(&min_stat, ctx, return_ctx);
  	if (maj_stat != GSS_S_COMPLETE) {
! 		pgsserr("gss_export_lucid_sec_context",
  			maj_stat, min_stat, &krb5oid);
  		printerr(0, "WARN: failed to free lucid sec context\n");
  	}
--- 198,206 ----
  	else
  		retcode = prepare_krb5_rfc_cfx_buffer(lctx, buf);
  
! 	maj_stat = gss_krb5_free_lucid_sec_context(&min_stat, return_ctx);
  	if (maj_stat != GSS_S_COMPLETE) {
! 		pgsserr("gss_krb5_export_lucid_sec_context",
  			maj_stat, min_stat, &krb5oid);
  		printerr(0, "WARN: failed to free lucid sec context\n");
  	}
